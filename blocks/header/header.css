.header {
  padding-top: 28px;
  /* Устанавливает значение поля от верхнего края содержимого элемента. Полем называется расстояние от внутреннего края рамки элемента до воображаемого прямоугольника, ограничивающего его содержимое */
  padding-bottom: 56px;
  /* Устанавливает значение поля от нижнего края содержимого элемента. Полем называется расстояние от внутреннего края рамки элемента до воображаемого прямоугольника, ограничивающего его содержимое (рис. 1). */

  display: flex;
  /* CSS-правило предназначено для выстраивания flexbox-сетки, которая строится из дочерних html-тэгов, расположенных внутри некоторого родительского контейнера. Для задания данной сетки необходимо установить правило display в значение:
display: flex; — для блокового отображения;
display: inline-flex; — для инлайнового отображения. */
  flex-direction: row;
  /* Свойство flex-direction устанавливает направление главной и поперечной оси или, говоря другими словами, расставляет элементы в ряд или в колонку. */
  justify-content: space-between;
  /* Разница между значениями space-around и space-between такова: space-between выделяет равное пространство между элементами, а space-around равное пространство вокруг каждого элемента, сдвигая его таким образом от контейнера. */
  align-items: flex-end;
  /* Это свойство определяет поведение по умолчанию того, как flex элементы располагаются вдоль поперечной оси на текущей линии. Думайте об этом как о justify-content версии для поперечной оси (перпендикулярной главной оси). */
}

@media screen and (max-width: 1279px) {
  .header {
    /* Меньше поля на маленьких экранах */
    padding-bottom: 48px;
  }
}

@media screen and (max-width: 425px) {
  .header {
    /* Меньше поля на маленьких экранах */
    padding-top: 16px;
  }
}
